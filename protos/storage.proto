syntax = "proto3";

package nest.microservices;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service StorageService {
  rpc myStorage(google.protobuf.Empty) returns (StorageInfo);
  rpc createFolder(CreateFolderRequest) returns (FolderInfo);
  rpc getFolder(GetFolderRequest) returns (GetFolderResponse);
  rpc getFolderInfo(GetFolderInfoRequest) returns (FolderInfo);
  rpc updateFolder(UpdateFolderRequest) returns (google.protobuf.Empty);
  rpc hardDeleteItem(DeleteItemRequest) returns (google.protobuf.Empty);

  rpc uploadFile(stream UploadFileRequest) returns (FileRef);
}

message Owner {
  optional string id = 1;
  optional string name = 2;
  optional string email = 3;
  optional string avatarURI = 4;
}

message FileRef {
  optional string id = 1;
  optional string name = 2;
  optional int64 size = 3;
  optional string createdAt = 4;
  optional string pinnedAt = 5;
  optional string modifiedAt = 6;
  optional string archivedAt = 7;
  optional string ownerId = 8;
  optional string contentType = 9;
  optional string thumbnail = 10;
  optional string description = 11;
}

message FolderInfo {
  optional string id = 1;
  optional string name = 2;
  optional int64 size = 3;
  optional string ownerId = 4;
  optional string createdAt = 5;
  optional string pinnedAt = 6;
  optional string modifiedAt = 7;
  optional string archivedAt = 8;
}

message StorageInfo {
  optional string id = 1;
  optional string name = 2;
  optional int64 used = 3;
  optional int64 total = 4;
  optional string refId = 5;
}

message Pagination {
  optional int32 limit = 1;
  optional string fileCursor = 2;
  optional string folderCursor = 3;
}

message GetFolderRequest {
  string rootId = 2;
  string folderId = 1;
  string label = 3;
  optional Pagination pagination = 4;
}

message GetFolderInfoRequest {
  string folderId = 1;
}

message ContentResult {
  repeated FileRef files = 1;
  repeated FolderInfo folders = 2;
}

message NextCursor {
  optional string fileCursor = 1;
  optional string folderCursor = 2;
}


message GetFolderResponse {
  optional string id = 1;
  optional string name = 2;
  optional int64 size = 3;
  optional string ownerId = 4;
  optional string createdAt = 5;
  optional string pinnedAt = 6;
  optional string modifiedAt = 7;
  optional string archivedAt = 8;

  optional ContentResult content = 9;
  optional NextCursor nextCursor = 10;
}

message CreateFolderRequest {
  string folderId = 1;
  FolderInfo item = 2;
}

message UpdateFolderMethod {
  string label = 1;
  optional string name = 2;
}

message UpdateFolderRequest {
  UpdateFolderMethod method = 1;
  string folderId = 2;
}

message DeleteItemRequest {
  string rootId = 1;
  string type = 2;
  string id = 3;
}

// content and offset
message UploadFileRequest {
  bytes content = 1;
  int64 offset = 2;
}