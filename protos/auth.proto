syntax = "proto3";

package nest.microservices;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// =========== AUTH ===========
service AuthService {
  rpc verifyToken(VerifyTokenReq) returns (UserDTO);
}

message VerifyTokenReq {
  string token = 1;
}

// =========== USER ===========
service UserService {
  rpc getById(GetByIdReq) returns (UserDTO);
  rpc getByEmail(GetByEmailReq) returns (UserDTO);
  rpc create(CreateUserReq) returns (UserDTO);
  rpc update(UpdateUserReq) returns (UserDTO);
  rpc delete(DeleteUserReq) returns (google.protobuf.Empty);
  rpc list(PaginationOptions) returns (stream UserListDTO);
}

message UserDTO {
  string id = 1;
  string name = 2;
  string email = 3;
  bool email_verified = 4;
  repeated string roles = 5;
  repeated string permissions = 6;
}

message UserListDTO {
  repeated UserDTO users = 1;
  optional string cursor = 2;
  int32 limit = 3;
  int32 total = 4;
}

message GetByIdReq {
  string id = 1;
}

message GetByEmailReq {
  string email = 1;
}

message UpdateUserReq {
  optional string id = 1;
  optional string email = 3;
  optional string name = 2;
  repeated string roles = 4;
}

message CreateUserReq {
  optional string email = 1;
  optional string name = 2;
  repeated string roles = 3;
}

message DeleteUserReq {
  string id = 1;
}

message PaginationOptions {
  optional int32 page = 2;
  optional int32 limit = 3;
}