syntax = "proto3";

package nest.microservices;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service StorageService {
  rpc get(GetStorageRequest) returns (StorageInfo);
  rpc list(ListStorageRequest) returns (ListStorageResponse);
  rpc initial(InitialStorageRequest) returns (google.protobuf.Empty);
  rpc myStorage(google.protobuf.Empty) returns (StorageInfo);

  rpc listFolder(ListFolderRequest) returns (ListFolderResponse);
  rpc createFolder(CreateFolderRequest) returns (FolderInfo);
  rpc getFolder(GetFolderRequest) returns (GetFolderResponse);
  rpc getFolderContent(GetFolderContentRequest) returns (GetFolderContentResponse);
  rpc getFolderInfo(GetFolderInfoRequest) returns (FolderInfo);
  rpc updateFolder(UpdateFolderRequest) returns (google.protobuf.Empty);
  rpc hardDeleteItem(DeleteItemRequest) returns (google.protobuf.Empty);

  rpc uploadFile(stream UploadFileRequest) returns (FileRef);
}

message GetStorageRequest {
  optional string id = 1;
  optional string ref_id = 2;
  optional string owner_id =3 ;
}

message ListStorageRequest {
  map<string, string> filter = 1;
  optional int32 limit = 2;
  optional string offset = 3;
  map<string, string> sort = 4;
}

message ListStorageResponse {
  repeated StorageInfo items = 1;
}

message InitialStorageRequest {
  string owner_id = 6;
  optional string name = 1;
  optional string description = 2;
  optional string ref_id = 5;
  
  optional int64 used = 3; // init 0
  optional int64 total = 4; // init -1 for unlimited
}

message Owner {
  optional string id = 1;
  optional string name = 2;
  optional string email = 3;
  optional string avatarURI = 4;
}

message FileRef {
  optional string id = 1;
  optional string name = 2;
  optional int64 size = 3;
  optional string createdAt = 4;
  optional string pinnedAt = 5;
  optional string modifiedAt = 6;
  optional string archivedAt = 7;
  optional string ownerId = 8;
  optional string contentType = 9;
  optional string thumbnail = 10;
  optional string description = 11;
}

message FolderInfo {
  optional string id = 1;
  optional string name = 2;
  optional int64 size = 3;
  optional string ownerId = 4;
  optional string createdAt = 5;
  optional string pinnedAt = 6;
  optional string modifiedAt = 7;
  optional string archivedAt = 8;
}

message StorageInfo {
  optional string id = 1;
  optional string name = 2;
  optional int64 used = 3;
  optional int64 total = 4;
  map<string, string> metadata = 6;
  optional string refId = 5;
}

message Pagination {
  optional int32 limit = 1;
  optional string fileCursor = 2;
  optional string folderCursor = 3;
}

message GetFolderRequest {
  string id = 1;
}

message GetFolderInfoRequest {
  string folderId = 1;
}

message ContentResult {
  repeated FileRef files = 1;
  repeated FolderInfo folders = 2;
}

message NextCursor {
  optional string fileCursor = 1;
  optional string folderCursor = 2;
}


message GetFolderResponse {
  optional string id = 1;
  optional string name = 2;
  optional int64 size = 3;
  optional string ownerId = 4;
  optional string createdAt = 5;
  optional string pinnedAt = 6;
  optional string modifiedAt = 7;
  optional string archivedAt = 8;

  optional ContentResult content = 9;
  optional NextCursor nextCursor = 10;
}

message GetFolderContentRequest {
  string id = 1;

  map<string, string> filter = 2;
  map<string, string> sort = 3;
  optional string limit = 4;
  optional string cursor = 5;
}

message GetFolderContentResponse {
  message Item {
    string id = 1;
    string kind = 2;
    optional string name = 3;
    optional string contentType = 4;
    optional string ownerId = 5;
    optional string createdAt = 6;
    optional string pinnedAt = 7;
    optional string modifiedAt = 8;
    optional string archivedAt = 9;

    optional int64 size = 10;
    optional string thumbnail = 11;
    optional string description = 12;
  }

  repeated Item items = 1;
  int32 total = 2;
  optional string prevCursor = 3;
  optional string nextCursor = 4;
}

message ListFolderRequest {
  string rootId = 1;
  map<string, string> filter = 2;
  map<string, string> sort = 3;
  optional int32 limit = 4;
  optional string cursor = 5;
}

message ListFolderResponse {
  message Folder {
    string id = 1;
    optional  string name = 2;
    optional int64 size = 3;
    optional string ownerId = 4;
    optional string createdAt = 5;
    optional string pinnedAt = 6;
    optional string modifiedAt = 7;
    optional string archivedAt = 8;
  }

  repeated Folder items = 1;
  int32 total = 2;
  optional string prevCursor = 3;
  optional string nextCursor = 4;
}

message CreateFolderRequest {
  string folderId = 1;
  FolderInfo item = 2;
}

message UpdateFolderMethod {
  string label = 1;
  optional string name = 2;
}

message UpdateFolderRequest {
  UpdateFolderMethod method = 1;
  string folderId = 2;
}

message DeleteItemRequest {
  string rootId = 1;
  string type = 2;
  string id = 3;
}

// content and offset
message UploadFileRequest {
  bytes content = 1;
  int64 offset = 2;
}